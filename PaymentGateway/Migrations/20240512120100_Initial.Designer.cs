// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGateway.Data;

#nullable disable

namespace PaymentGateway.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240512120100_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentGateway.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("BillCycle")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DueTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PaymentOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrainingOrganizationInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingOrganizationInvoiceId");

                    b.ToTable("TransactionInvoices");
                });

            modelBuilder.Entity("PaymentGateway.Entities.BillSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AmountCode")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("BillSummary");
                });

            modelBuilder.Entity("PaymentGateway.Entities.RevenueTypeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BeneficiaryAgencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("GfsCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("RevenueTypeEntry");
                });

            modelBuilder.Entity("PaymentGateway.Entities.TrainingOrganizationInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrainingOrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainingOrganizationInvoices");
                });

            modelBuilder.Entity("PaymentGateway.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PaymentGateway.Entities.Bill", b =>
                {
                    b.HasOne("PaymentGateway.Entities.TrainingOrganizationInvoice", null)
                        .WithMany("Bills")
                        .HasForeignKey("TrainingOrganizationInvoiceId");
                });

            modelBuilder.Entity("PaymentGateway.Entities.BillSummary", b =>
                {
                    b.HasOne("PaymentGateway.Entities.Bill", null)
                        .WithMany("BillSummaries")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("PaymentGateway.Entities.RevenueTypeEntry", b =>
                {
                    b.HasOne("PaymentGateway.Entities.Bill", null)
                        .WithMany("RevenueTypeEntries")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("PaymentGateway.Entities.Bill", b =>
                {
                    b.Navigation("BillSummaries");

                    b.Navigation("RevenueTypeEntries");
                });

            modelBuilder.Entity("PaymentGateway.Entities.TrainingOrganizationInvoice", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
